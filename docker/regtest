#!/bin/bash
print_success() {
  printf "\033[;1;32mPASSED\033[;0m $1\n"
}

print_error() {
  printf "\033[;1;31mFAILED\033[;0m $1\n"
}

run(){
  label=$1
  value=$2
  cmd=$3
  if [[ "$cmd" == "$value" ]]; then
    print_success "$label is $cmd"
  else
    print_error "$label is $cmd, should be $value"
    failed="true"
  fi
}

failed="false"
blockheight=170
utxos=5
channel_size=24000000 # 0.024 btc
balance_size=12000000 # 0.012 btc
channel_size_msat=24000000000 # 0.024 btc
balance_size_msat=12000000000 # 0.012 btc
channel_count=1

source $(pwd)/docker-scripts.sh
regtest-start
echo "=================================="
printf "\033[;1;36mregtest started! starting tests...\033[;0m\n"
echo "=================================="
echo ""

# lnd
run "lnd .synced_to_chain" "true" $(lncli-sim getinfo | jq -r ".synced_to_chain")
run "lnd utxo count" $utxos $(lncli-sim listunspent | jq -r ".utxos | length")
run "lnd .block_height" $blockheight $(lncli-sim getinfo | jq -r ".block_height")
run "lnd openchannels" $channel_count $(lncli-sim listchannels | jq -r ".channels | length")
run "lnd .channels[0].active_channel" true $(lncli-sim listchannels | jq -r ".channels[0].active")
run "lnd .channels[0].capacity" $channel_size $(lncli-sim listchannels | jq -r ".channels[0].capacity")
run "lnd .channels[0].push_amount_sat" $balance_size $(lncli-sim listchannels | jq -r ".channels[0].push_amount_sat")

# core lightning
run "cln blockheight" $blockheight $(lightning-cli-sim getinfo | jq -r ".blockheight")
run "cln utxo count" $utxos $(lightning-cli-sim listfunds | jq -r ".outputs | length")
run "cln openchannels" $channel_count $(lightning-cli-sim getinfo | jq -r ".num_active_channels")
run "cln channel[0].state" "CHANNELD_NORMAL" $(lightning-cli-sim listfunds | jq -r ".channels[0].state")
run "cln channel[0].amount_msat" $channel_size_msat $(lightning-cli-sim listfunds | jq -r ".channels[0].amount_msat")
run "cln channel[0].our_amount_msat" $balance_size_msat $(lightning-cli-sim listfunds | jq -r ".channels[0].our_amount_msat")

run "boltz service status" "200" $(curl -s -o /dev/null --head -w "%{http_code}" "http://localhost:9001/version")
run "mempool service status" "200" $(curl -s -o /dev/null --head -w "%{http_code}" "http://localhost:8999/api/v1/blocks/tip/height")
run "mempool_liquid service status" "200" $(curl -s -o /dev/null --head -w "%{http_code}" "http://localhost:8998/api/v1/blocks/tip/height")

# return non-zero exit code if a test fails
if [[ "$failed" == "true" ]]; then
  echo ""
  echo "=================================="
  print_error "one more more tests failed"
  echo "=================================="
  exit 1
else
  echo ""
  echo "=================================="
  print_success "all tests passed! yay!"
  echo "=================================="
fi
